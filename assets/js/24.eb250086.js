(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{304:function(t,o,r){"use strict";r.r(o);var s=r(14),a=Object(s.a)({},(function(){var t=this,o=t._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"行为模式"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#行为模式"}},[t._v("#")]),t._v(" 行为模式")]),t._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),o("p",[t._v("行为模式负责对象间的高效沟通和职责委派。")])]),t._v(" "),o("p",[o("RouterLink",{attrs:{to:"/behavioral/responsibility.html"}},[o("strong",[t._v("责任链模式")])]),t._v(": 允许将请求沿着处理者链进行发送。 收到请求后， 每个处理者均可对请求进行处理， 或将其传递给链上的下个处理者。")],1),t._v(" "),o("p",[o("RouterLink",{attrs:{to:"/behavioral/command.html"}},[o("strong",[t._v("命令模式")])]),t._v(": 可将请求转换为一个包含与请求相关的所有信息的独立对象。 该转换让你能根据不同的请求将方法参数化、 延迟请求执行或将其放入队列中， 且能实现可撤销操作。")],1),t._v(" "),o("p",[o("RouterLink",{attrs:{to:"/behavioral/iterator.html"}},[o("strong",[t._v("迭代器模式")])]),t._v(": 能在不暴露集合底层表现形式 （列表、 栈和树等） 的情况下遍历集合中所有的元素。")],1),t._v(" "),o("p",[o("RouterLink",{attrs:{to:"/behavioral/mediator.html"}},[o("strong",[t._v("中介者模式")])]),t._v(": 减少对象之间混乱无序的依赖关系。 该模式会限制对象之间的直接交互， 迫使它们通过一个中介者对象进行合作。")],1),t._v(" "),o("p",[o("RouterLink",{attrs:{to:"/behavioral/memento.html"}},[o("strong",[t._v("备忘录模式")])]),t._v(": 允许在不暴露对象实现细节的情况下保存和恢复对象之前的状态。")],1)])}),[],!1,null,null,null);o.default=a.exports}}]);